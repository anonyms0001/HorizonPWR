<%= form_with(model: product_type, local: true) do |form| %>
  <% if product_type.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(product_type.errors.count, "error") %> prohibited this product_type from being saved:</h2>

      <ul>
      <% product_type.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :name %>
    <%= form.text_field :name, class: 'form-control' %>
  </div>


<%= form.fields_for :fields do |builder| %>
  <%= render 'field_fields', form: builder %>
<% end %>
<%= link_to_add_fields "Add Field", form, :fields %>
  

  <div class="form-group">
    <% if product_type.persisted? %>
      <div class="float-right">
        <%= link_to 'Destroy', product_type, method: :delete, class: "text-danger", data: { confirm: 'Are you sure?' } %>
      </div>
    <% end %>

    <%= form.submit class: 'btn btn-primary' %>

    <% if product_type.persisted? %>
      <%= link_to "Cancel", product_type, class: "btn btn-link" %>
    <% else %>
      <%= link_to "Cancel", product_types_path, class: "btn btn-link" %>
    <% end %>
  </div>
<% end %>

<script type="text/javascript">
  $(document).on 'click', 'form .remove_fields', (event) ->
  $(this).prev('input[type=hidden]').val('1')
  $(this).closest('fieldset').hide()
  event.preventDefault()

$(document).on 'click', 'form .add_fields', (event) ->
  time = new Date().getTime()
  regexp = new RegExp($(this).data('id'), 'g')
  $(this).before($(this).data('fields').replace(regexp, time))
  event.preventDefault()
</script>